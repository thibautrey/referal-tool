// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql" // Vous pouvez le changer en "mysql" ou "sqlite" selon vos besoins
    url      = env("DATABASE_URL")
}

model User {
    id             Int       @id @default(autoincrement())
    email          String    @unique
    firstName      String?
    lastName       String?
    password       String
    role           Role      @default(USER)
    active         Boolean   @default(true)
    otpEnabled     Boolean   @default(false) // Indique si l'OTP est activé
    otpSecret      String? // Clé secrète pour l'OTP (nullable car optionnel)
    otpVerified    Boolean   @default(false) // Indique si l'OTP a été vérifié
    otpBackupCodes String? // Pour stocker les codes de secours (JSON formaté)
    projects       Project[]
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
}

model Project {
    id          Int      @id @default(autoincrement())
    name        String
    description String?
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
    links       Link[] // Nouvelle relation
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Link {
    id        Int         @id @default(autoincrement())
    name      String
    baseUrl   String
    shortCode String      @unique // Code court unique pour l'URL
    project   Project     @relation(fields: [projectId], references: [id])
    projectId Int
    rules     LinkRule[]
    active    Boolean     @default(true)
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    LinkVisit LinkVisit[]
}

model LinkRule {
    id          Int         @id @default(autoincrement())
    redirectUrl String
    countries   String // Stocké en JSON comme liste de codes pays
    link        Link        @relation(fields: [linkId], references: [id])
    linkId      Int
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    LinkVisit   LinkVisit[]
}

model IpCountryCache {
    ip          String   @id
    countryCode String
    city        String?
    expiresAt   DateTime
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model LinkVisit {
    id        Int       @id @default(autoincrement())
    link      Link      @relation(fields: [linkId], references: [id])
    linkId    Int
    ip        String?
    country   String
    city      String?
    rule      LinkRule? @relation(fields: [ruleId], references: [id])
    ruleId    Int?
    createdAt DateTime  @default(now())

    @@index([linkId])
    @@index([ip])
}

enum Role {
    USER
    ADMIN
}
